#+TITLE:  Variant Manager Configuration
#+AUTHOR: Xavier Garrido
#+DATE:   2015-07-21
#+OPTIONS: ^:{}
#+STARTUP: entitiespretty

* Introduction

The variant concept has been introduced in order to define "variable" parameters
for configuration files. Basic idea is to set a number of parameters that will
be used within configuration files such as vertex or genbb generator names. Then
it is possible to change their respective values in the command line, for
instance.

* Manager configuration
:PROPERTIES:
:TANGLE: snvariant_manager.conf
:END:

#+BEGIN_SRC shell
  #@config The main configuration parameters for the application variant repository

  #@description The organization name
  organization : string = "SuperNEMO"

  #@description The application name
  application  : string = "SN@ilWare"

  #@description The list of embedded registries
  registries : string[3] = "core" "simulation" "detector"

  #@description The rank of registry "core"
  registries.core.rank : integer = 0

  #@description The configuration file of registry "core"
  registries.core.config : string as path = "@configuration:snvariant_core_registry.conf"

  #@description The rank of registry "simulation"
  registries.simulation.rank : integer = 1

  #@description The configuration file of registry "simulation"
  registries.simulation.config : string as path = "@configuration:snvariant_simulation_registry.conf"

  #@description The rank of registry "detector"
  registries.detector.rank : integer = 2

  #@description The configuration file of registry "detector"
  registries.detector.config : string as path = "@configuration:snvariant_detector_registry.conf"

  #@description The lock request
  lock : boolean = true
#+END_SRC

* Registries
** Core registry
:PROPERTIES:
:TANGLE: snvariant_core_registry.conf
:END:
#+BEGIN_SRC shell
  #@config The configuration for the core variant registry

  #@description The name of the registry
  name : string = "core"

  #@description The display name of the registry
  display_name : string = "Core"

  #@description A short description
  terse_description : string = "The core application parameters"

  #@description Logging priority
  logging.priority : string = @variant(core:logging_priority|"fatal")

  #@description The variant model to be used as the default top variant
  top_variant_name : string = "core.VM"

  #@description The list of files containing the definition of variant/parameter models
  configuration_items.files : string[1] as path =  \
    "@configuration:core_variants.def"
#+END_SRC
** Simulation registry
:PROPERTIES:
:TANGLE: snvariant_simulation_registry.conf
:END:
#+BEGIN_SRC shell
  #@config The configuration for the simulation variant registry

  #@description The name of the registry
  name : string = "simulation"

  #@description The display name of the registry
  display_name : string = "Simulation"

  #@description A short description
  terse_description : string = "The simulation application parameters"

  #@description Logging priority
  logging.priority : string = @variant(core:logging_priority|"fatal")

  #@description The variant model to be used as the default top variant
  top_variant_name : string = "simulation.VM"

  #@description The list of files containing the definition of variant/parameter models
  configuration_items.files : string[1] as path =  \
    "@configuration:simulation_variants.def"
#+END_SRC

** Detector registry
:PROPERTIES:
:TANGLE: snvariant_detector_registry.conf
:END:
#+BEGIN_SRC shell
  #@config The configuration for the simulation variant registry

  #@description The name of the registry
  name : string = "detector"

  #@description The display name of the registry
  display_name : string = "Detector"

  #@description A short description
  terse_description : string = "The detector application parameters"

  #@description Logging priority
  logging.priority : string = @variant(core:logging_priority|"fatal")

  #@description The variant model to be used as the default top variant
  top_variant_name : string = "detector.VM"

  #@description The list of files containing the definition of variant/parameter models
  configuration_items.files : string[1] as path =  \
    "@configuration:detector_variants.def"
#+END_SRC

* Variant definitions
** Code skeletons                                                 :noexport:
#+NAME: variant_preamble
#+BEGIN_SRC shell :results none :tangle no
  #@description The definitions for generic variants
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC

#+NAME: variant_generator
#+BEGIN_SRC shell :tangle no :results output :var regex=""
  cnt=0
  pms=$(sed -n '/*.*'${regex}' variants/,/*.*variants/p' ./snvariant_manager.org | grep '\[name=.*.PM' | grep -v 'print' | awk -F \" '{print $2}')
  for i in ${=pms}; do
      pm_name=${i/.PM/}
      echo "parameters.${pm_name}.model : string = \"$i\""
      let cnt++
      array[cnt]=$i
  done
  echo
  echo "#@description The list of variant parameters"
  echo "parameters : string[$cnt] = \\"
  for i in $array; do
      echo -n "\"${i/.PM/}\" "
      if [ $i != $array[-1] ]; then echo ' \';fi
  done
#+END_SRC

** Core variants
:PROPERTIES:
:TANGLE: core_variants.def
:END:
*** Insert preamble
#+BEGIN_SRC shell :noweb yes
  <<variant_preamble>>
#+END_SRC

*** Logging priority
#+BEGIN_SRC shell
  [name="logging_priority.PM" type="parameter"]
  display_name              : string = "Logging priority"
  terse_description         : string = "The logging priority"
  type                      : string = "string"
  mutability                : string = "variable"
  variable.mode             : string = "enumeration"
  string.enumerated.size    : integer = 8
  string.enumerated_0.value : string = "fatal"
  string.enumerated_1.value : string = "critical"
  string.enumerated_2.value : string = "error"
  string.enumerated_3.value : string = "warning"
  string.enumerated_4.value : string = "notice"
  string.enumerated_5.value : string = "information"
  string.enumerated_6.value : string = "debug"
  string.enumerated_7.value : string = "trace"
#+END_SRC

*** Output directory
#+BEGIN_SRC shell
  [name="output_path.PM" type="parameter"]
  display_name   : string = "Output directory"
  description    : string = "The output directory for the generated files"
  type           : string = "string"
  path           : boolean = 1
  mutability     : string = "variable"
  variable.mode  : string = "free"
  string.default : string = "/tmp/${USER}/snemo.d/"
#+END_SRC

*** Top variant

#+BEGIN_SRC shell :noweb yes
  [name="core.VM" type="variant"]

  #@config A variant model describing the core parameters

  #@description The display name of this variant
  display_name : string = "Core setup"

  #@description A short description of the variant
  terse_description : string = "The configuration parameters for the core application"

  <<variant_generator(regex="Core")>>
#+END_SRC

** Simulation variants
:PROPERTIES:
:TANGLE: simulation_variants.def
:END:
*** Insert preamble
#+BEGIN_SRC shell :noweb yes
  <<variant_preamble>>
#+END_SRC

*** Seed manager
#+BEGIN_SRC shell
  [name="random_seed.PM" type="parameter"]
  display_name  : string = "Value for random seeds"
  type          : string = "integer"
  mutability    : string = "fixed"
  integer.fixed : integer = 0

  [name="if_random_seed.VM" type="variant"]
  display_name               : string = "Random seeds"
  parameters                 : string[1] = "null_seed"
  parameters.null_seed.model : string = "random_seed.PM"
#+END_SRC

#+BEGIN_SRC shell
  [name="random_seed_flag.PM" type="parameter"]
  display_name                  : string = "Seed flag"
  description                   : string = "A flag to make random seeds"
  type                          : string = "boolean"
  mutability                    : string = "variable"
  boolean.default               : boolean = 0
  variants                      : string[1] = "if_random_seed"
  variants.if_random_seed.model : string = "if_random_seed.VM"
  boolean.variant.true          : string = "if_random_seed"
#+END_SRC

*** Total number of simulated events
#+BEGIN_SRC shell
  [name="total_number_of_event.PM" type="parameter"]
  display_name  : string = "Total number of event"
  description   : string = "The total number of event simulated"
  type          : string = "real"
  mutability    : string = "variable"
  variable.mode : string = "free"
#+END_SRC

*** Vertex generators

#+NAME: vg_list_variants
#+BEGIN_SRC shell :tangle no :results output :exports none
  cnt=0
  falaise_dir=$SNAILWARE_PRO_DIR/falaise/install/share/Falaise-${FALAISE_VERSION}/resources
  files=$(cat current/sngenvertex_manager.conf | grep '".*/.*"\|".*"' | awk -F \" '{print $2}')
  for if in ${=files}; do
      file=$if
      file=${file/@falaise:/${falaise_dir}\/}
      file=${file/@configuration:/current\/}
      vgs=$(cat $file | grep 'genvtx::.*_vg' | awk -F \" '{print $2}')
      for ivg in ${=vgs}; do
          echo "string.enumerated_${cnt}.value : string = \"${ivg}\""
          let cnt++
      done
  done
  echo "string.enumerated.size : integer = ${cnt}"
#+END_SRC

#+BEGIN_SRC shell :noweb yes
  [name="vertex_generator_name.PM" type="parameter"]
  display_name  : string = "Vertex generator name"
  description   : string = "The name of the vertex generator"
  type          : string = "string"
  mutability    : string = "variable"
  variable.mode : string = "enumeration"
  string.default : string = "source_strips_bulk"
  <<vg_list_variants()>>
#+END_SRC

*** Event generators

#+NAME: eg_list_variants
#+BEGIN_SRC shell :tangle no :results output :exports none
  cnt=0
  falaise_dir=$SNAILWARE_PRO_DIR/falaise/install/share/Falaise-${FALAISE_VERSION}/resources
  files=$(cat current/sngenbb_manager.conf | grep '".*/.*"\|".*"' | awk -F \" '{print $2}')
  for if in ${=files}; do
      file=${if/@falaise:/${falaise_dir}\/}
      file=${file/@configuration:/current\/}
      egs=$(cat $file | grep 'genbb::' | awk -F \" '{print $2}')
      for ieg in ${=egs}; do
          echo "string.enumerated_${cnt}.value : string = \"${ieg}\""
          let cnt++
      done
  done
  echo "string.enumerated.size : integer = ${cnt}"
#+END_SRC

#+BEGIN_SRC shell :noweb yes
  [name="event_generator_name.PM" type="parameter"]
  display_name  : string = "Event generator name"
  description   : string = "The name of the genbb event generator"
  type          : string = "string"
  mutability    : string = "variable"
  variable.mode : string = "enumeration"
  string.default : string = "Se82.0nubb"
  <<eg_list_variants()>>
#+END_SRC

*** Top variant

#+BEGIN_SRC shell :noweb yes
  [name="simulation.VM" type="variant"]

  #@config A variant model describing the simulation parameters

  #@description The display name of this variant
  display_name : string = "Simulation setup"

  #@description A short description of the variant
  terse_description : string = "The configuration parameters for the simulation setup"

  <<variant_generator(regex="Simulation")>>
#+END_SRC
** Detector variants
:PROPERTIES:
:TANGLE: detector_variants.def
:END:
*** Insert preamble
#+BEGIN_SRC shell :noweb yes
  <<variant_preamble>>
#+END_SRC

*** Calorimeter parameters
**** Energy resolutions
#+BEGIN_SRC shell
  [name="calo_energy_resolution.PM" type="parameter"]
  display_name        : string = "Main wall energy resolution"
  description         : string = "Energy resolution of main wall calorimeter"
  type                : string = "real"
  real.unit_label     : string = "fraction"
  real.preferred_unit : string = "%"
  mutability          : string = "variable"
  variable.mode       : string = "interval"
  real.domain         : string = "[0 %, 100 %]"
  real.default        : real as fraction = 8 %
#+END_SRC

#+BEGIN_SRC shell
  [name="xcalo_energy_resolution.PM" type="parameter"]
  display_name        : string = "X-wall energy resolution"
  description         : string = "Energy resolution of X-wall calorimeter"
  type                : string = "real"
  real.unit_label     : string = "fraction"
  real.preferred_unit : string = "%"
  mutability          : string = "variable"
  variable.mode       : string = "interval"
  real.domain         : string = "[0 %, 100 %]"
  real.default        : real as fraction = 12 %
#+END_SRC

#+BEGIN_SRC shell
  [name="gveto_energy_resolution.PM" type="parameter"]
  display_name        : string = "Gamma veto energy resolution"
  description         : string = "Energy resolution of gamma veto calorimeter"
  type                : string = "real"
  real.unit_label     : string = "fraction"
  real.preferred_unit : string = "%"
  mutability          : string = "variable"
  variable.mode       : string = "interval"
  real.domain         : string = "[0 %, 100 %]"
  real.default        : real as fraction = 15 %
#+END_SRC

**** Energy thresholds
#+BEGIN_SRC shell
  [name="calo_high_energy_threshold.PM" type="parameter"]
  display_name        : string = "Main wall high energy threshold"
  description         : string = "High energy threshold of main wall calorimeter"
  type                : string = "real"
  real.unit_label     : string = "energy"
  real.preferred_unit : string = "keV"
  mutability          : string = "variable"
  variable.mode       : string = "interval"
  real.domain         : string = "[0 keV, 3 MeV]"
  real.default        : real as energy = 150 keV
  [name="calo_low_energy_threshold.PM" type="parameter"]
  display_name        : string = "Main wall low energy threshold"
  description         : string = "Low energy threshold of main wall calorimeter"
  type                : string = "real"
  real.unit_label     : string = "energy"
  real.preferred_unit : string = "keV"
  mutability          : string = "variable"
  variable.mode       : string = "interval"
  real.domain         : string = "[0 keV, 3 MeV]"
  real.default        : real as energy = 50 keV
#+END_SRC

#+BEGIN_SRC shell
  [name="xcalo_high_energy_threshold.PM" type="parameter"]
  display_name        : string = "X-wall high energy threshold"
  description         : string = "High energy threshold of x-wall calorimeter"
  type                : string = "real"
  real.unit_label     : string = "energy"
  real.preferred_unit : string = "keV"
  mutability          : string = "variable"
  variable.mode       : string = "interval"
  real.domain         : string = "[0 keV, 3 MeV]"
  real.default        : real as energy = 150 keV
  [name="xcalo_low_energy_threshold.PM" type="parameter"]
  display_name        : string = "X-wall low energy threshold"
  description         : string = "Low energy threshold of x-wall calorimeter"
  type                : string = "real"
  real.unit_label     : string = "energy"
  real.preferred_unit : string = "keV"
  mutability          : string = "variable"
  variable.mode       : string = "interval"
  real.domain         : string = "[0 keV, 3 MeV]"
  real.default        : real as energy = 50 keV
#+END_SRC

#+BEGIN_SRC shell
  [name="gveto_high_energy_threshold.PM" type="parameter"]
  display_name        : string = "Gamma veto high energy threshold"
  description         : string = "High energy threshold of gamma veto calorimeter"
  type                : string = "real"
  real.unit_label     : string = "energy"
  real.preferred_unit : string = "keV"
  mutability          : string = "variable"
  variable.mode       : string = "interval"
  real.domain         : string = "[0 keV, 3 MeV]"
  real.default        : real as energy = 150 keV
  [name="gveto_low_energy_threshold.PM" type="parameter"]
  display_name        : string = "Gamma veto low energy threshold"
  description         : string = "Low energy threshold of gamma veto calorimeter"
  type                : string = "real"
  real.unit_label     : string = "energy"
  real.preferred_unit : string = "keV"
  mutability          : string = "variable"
  variable.mode       : string = "interval"
  real.domain         : string = "[0 keV, 3 MeV]"
  real.default        : real as energy = 50 keV
#+END_SRC

*** Magnetic field
**** Magnitude of z-component magnetic field
#+BEGIN_SRC shell
  [name="bz_magnitude.PM" type="parameter"]
  display_name        : string = "Bz field magnitude"
  description         : string = "Magnitude of z-component of magnetic field"
  type                : string = "real"
  real.unit_label     : string = "magnetic_flux_density"
  real.preferred_unit : string = "gauss"
  mutability          : string = "variable"
  variable.mode       : string = "interval"
  real.domain         : string = "[0 G, 100 G]"
  real.default        : real as magnetic_flux_density = 25 G
#+END_SRC

*** Source material
#+BEGIN_SRC shell
  [name="bb_source_material.PM" type="parameter"]
  display_name  : string = "Source material"
  description   : string = "The material of the source foil"
  type          : string = "string"
  mutability    : string = "variable"
  variable.mode : string = "enumeration"
  string.enumerated.size : integer = 4
  string.enumerated_0.value : string = "snemo::se82_source_material"
  string.enumerated_1.value : string = "snemo::ca48_source_material"
  string.enumerated_2.value : string = "snemo::nd150_source_material"
  string.enumerated_3.value : string = "snemo::copper"
#+END_SRC

*** Top variant

#+BEGIN_SRC shell :noweb yes
  [name="detector.VM" type="variant"]

  #@config A variant model describing the detector parameters

  #@description The display name of this variant
  display_name : string = "Detector setup"

  #@description A short description of the variant
  terse_description : string = "The configuration parameters for the detector setup"

  <<variant_generator(regex="Detector")>>
#+END_SRC
