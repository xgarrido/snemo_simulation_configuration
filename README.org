#+TITLE: SuperNEMO configuration for SN@ilWare
#+AUTHOR: Xavier Garrido
#+OPTIONS: toc:nil ^:{}

This repository contains a SN@ilWare configuration to run SuperNEMO
simulations. The current version is hosted at
[[https://github.com/xgarrido/snemo_simulation_configuration]] under =git= version
control. You can clone this repository by doing

#+BEGIN_SRC sh
  git clone https://github.com/xgarrido/snemo_simulation_configuration snemo_configuration
#+END_SRC

This will create a directory =snemo_configuration= in the working directory
containing all the source files needed to configure and to setup SN@ilWare
programs. The repository holds the following files

- [[./simulation_config.org][simulation_config]] :: the main file holding the module/service manager
     configuration.
- [[./sngeometry_manager.org][sngeometry_manager]] :: the configuration of SuperNEMO geometry
- [[./sng4_manager.org][sng4_manager]] :: the Geant4 simulation configuration
- [[./step_hit_processor_factory.org][step_hit_processor_factory]] :: the factory of step hit processor in relation
     with Geant4 step hits
- [[./sngenbb_manager.org][sngenbb_manager]] :: the double beta decay generator /aka/ genbb configuration
     file
- [[./sngenvertex_manager.org][sngenvertex_manager]] :: the vertex generator configuration
- [[./snanalysis_manager.org][snanalysis_manager]] :: the analysis module declaration to perform SuperNEMO
     analysis such as sensitivity measurements

The configuration files are organised using [[http://orgmode.org/worg/org-contrib/babel/index.html][org-babel]] and its ability to execute
source code. It requires then a recent installation of emacs which bundles
=org=. Without entering into too much details regarding =org-babel= abilities,
the basic idea is to give a "literate" way to navigate through the different
sections, each of them representing a configuration file. Moreover, using =org=
folding/unfolding capability, item can be hide and the user can focus on
relevant parts.

To export the different configuration files, you can run =org-babel-tangle=
which will tangle each code block into the given file or use the associated
Makefile. The author recommends to use the Makefile since the tangling process
is asynchronous and thus, does not freeze your emacs (=org-babel-tangle=
"occupies" emacs during its execution).
