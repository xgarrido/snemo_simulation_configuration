#+TITLE:  SNGenvertex Manager Configuration
#+AUTHOR: Xavier Garrido
#+DATE:   2013-10-20
#+OPTIONS: ^:{}

* Introduction
This file holds some vertex generators related to SuperNEMO detector geometry.

* Manager configuration
:PROPERTIES:
:TANGLE: sngenvertex_manager.conf
:END:

** Logging priority
#+BEGIN_SRC sh
  #@description Logging priority
  logging.priority : string = "warning"
#+END_SRC

** Vertices list of files
The following code defines the location of several vertices files. All of them
are defined in Section [[Vertex configuration]].
#+BEGIN_SRC sh
  #@description Names of the files configuring the list of registered vertex generators
  vg_list : string[4] as path =                                              \
    "${SNAILWARE_SIMULATION_DIR}/snemo_configuration/current/scin_vg.lis"    \
    "${SNAILWARE_SIMULATION_DIR}/snemo_configuration/current/tracker_vg.lis" \
    "${SNAILWARE_SIMULATION_DIR}/snemo_configuration/current/source_vg.lis"  \
    "${SNAILWARE_SIMULATION_DIR}/snemo_configuration/current/hall_vg.lis"
#+END_SRC

* Vertex configuration
This section defines several vertices configuration :
- [[Scintillator vertices][Scintillator vertices]]: to generate external events coming from calorimeter
  walls,
- [[Tracker vertices][Tracker vertices]]: to generate events from the internal drift chamber either on
  wires surface or inside gas tracking,
- [[Tracker vertices][Source vertices]]: to produce 2\beta events or to simulate source contamination.
- [[External vertices][External vertices]]: to generate events from outside the detector like neutrons

** Scintillator vertices
:PROPERTIES:
:TANGLE: scin_vg.lis
:END:

Insert preamble
#+BEGIN_SRC sh
  #@description A list of vertex generators
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC

- Generate vertex in the bulk volume of the wrapper for the main calorimeter's
  scintillator blocks:

  #+BEGIN_SRC sh
    [name="calo_wrapper_bulk" type="genvtx::box_model_vg"]

    #@config Vertex generation from the bulk of the main calorimeter wrapper

    #@description Logging priority
    logging.priority : string = "warning"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    #origin : string = "category=calorimeter_wrapper module={*} side={1} column={0;1;2;4;19} row={0;1;2;12;13}"
    origin : string = "category='calorimeter_wrapper' module={*} side={*} column={*} row={*}"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "bulk"
  #+END_SRC

- Generate vertex in the bulk volume of the wrapper for the X-calorimeter's
  scintillator blocks:

  #+BEGIN_SRC sh
    [name="xcalo_wrapper_bulk" type="genvtx::box_model_vg"]

    #@config Vertex generation from the bulk of the X-wall calorimeter wrapper

    #@description Logging priority
    logging.priority : string = "warning"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='xcalo_wrapper' module={*} side={*} column={*} row={*}"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "bulk"
  #+END_SRC

- Generate vertex in the bulk volume of the wrapper for the \gamma veto
  calorimeter's scintillator blocks:

  #+BEGIN_SRC sh
    [name="gveto_wrapper_bulk" type="genvtx::box_model_vg"]

    #@config Vertex generation from the bulk of the gamma veto wrapper

    #@description Logging priority
    logging.priority : string = "warning"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='gveto_wrapper' module={*} side={*} wall={*} column={*}"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "bulk"
  #+END_SRC

- Generate vertex from the surface of the main calorimeter's scintillator blocks:

  #+BEGIN_SRC sh
    [name="calo_wrapper_surface" type="genvtx::box_model_vg"]

    #@config Vertex generation from the surface of the main calorimeter wrapper

    #@description Logging priority
    logging.priority : string = "warning"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='calorimeter_wrapper' module={*} side={*} column={*} row={*}"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "surface"

    #@description Surface mode box top face activation
    mode.surface.top  : boolean = 1
  #+END_SRC

- Generate vertex from the surface of the X-calorimeter's scintillator blocks:

  #+BEGIN_SRC sh
    [name="xcalo_wrapper_surface" type="genvtx::box_model_vg"]

    #@config Vertex generation from the surface of the X-wall calorimeter wrapper

    #@description Logging priority
    logging.priority : string = "warning"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='xcalo_wrapper' module={*} side={*} column={*} row={*}"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "surface"

    #@description Surface mode box top face activation
    mode.surface.top  : boolean = 1
  #+END_SRC

- Generate vertex from the surface of the \gamma veto's scintillator blocks:

  #+BEGIN_SRC sh
    [name="gveto_wrapper_surface" type="genvtx::box_model_vg"]

    #@config Vertex generation from the surface of the gamma veto wrapper

    #@description Logging priority
    logging.priority : string = "warning"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='gveto_wrapper' module={*} side={*} wall={*} column={*}"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "surface"

    #@description Surface mode box top face activation
    mode.surface.top  : boolean = 1
  #+END_SRC
** Tracker vertices
:PROPERTIES:
:TANGLE: tracker_vg.lis
:END:

Insert preamble
#+BEGIN_SRC sh
  #@description A list of vertex generators
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC

- Generate vertex from the bulk volume of the anode wires:

  #+BEGIN_SRC sh
    [name="anode_wire_bulk" type="genvtx::cylinder_model_vg"]

    #@config Vertex generation from the bulk volume of the anode wires

    #@description Logging priority
    logging.priority  : string = "warning"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='drift_cell_anodic_wire' module={*} side={*} layer={*} row={*}"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "bulk"
  #+END_SRC

- Generate vertex on the surface of the anode wires:

  #+BEGIN_SRC sh
    [name="anode_wire_surface" type="genvtx::cylinder_model_vg"]

    #@config Vertex generation from the surface of the anode wires

    #@description Logging priority
    logging.priority  : string = "warning"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='drift_cell_anodic_wire' module={*} side={*} layer={*} row={*}"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "surface"

    #@description Surface mode box side face activation
    mode.surface.side   : boolean = 1

    #@description Surface mode box bottom face activation
    mode.surface.bottom : boolean = 0

    #@description Surface mode box top face activation
    mode.surface.top    : boolean = 0
  #+END_SRC

- Generate vertex on the surface of the field wires:

  #+BEGIN_SRC sh
    [name="field_wire_surface" type="genvtx::cylinder_model_vg"]

    #@config Vertex generation from the surface of the field wires

    #@description Logging priority
    logging.priority  : string = "warning"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='drift_cell_field_wire' module={*} side={*} layer={*} row={*} set={*} wire={*}"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "surface"

    #@description Surface mode box side face activation
    mode.surface.side   : boolean = 1

    #@description Surface mode box bottom face activation
    mode.surface.bottom : boolean = 0

    #@description Surface mode box top face activation
    mode.surface.top    : boolean = 0
  #+END_SRC
** Source vertices
:PROPERTIES:
:TANGLE: source_vg.lis
:END:

Since there are two types of source strips namely "internal" and "external" with
different size and then different isotope mass, we first define independent
vertices for each of this model and then use a =genvtx::combined_vg= model to
combine with appropriate weights. These vertices are only available with
SuperNEMO geometry version greater than 2.0.

Insert preamble
#+BEGIN_SRC sh
  #@description A list of vertex generators
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC

*** Internal source strips
- Generate vertex from the bulk volume of the source foil:
  #+BEGIN_SRC sh
    [name="source_strips_internal_bulk" type="genvtx::box_model_vg"]

    #@config Vertex generation from the bulk volume of the inner source strips

    #@description Logging priority
    logging.priority  : string = "warning"

    #@description Geometry version requirement (not working with version lower than 2.0)
    geometry.setup_requirement : string = "snemo(>=2)"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='source_strip' module={*} strip=[1;34]"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "bulk"
  #+END_SRC

- Generate vertex from the surface of the source foil:
  #+BEGIN_SRC sh
    [name="source_strips_internal_surface" type="genvtx::box_model_vg"]

    #@config Vertex generation from the surface of the inner source strips

    #@description Logging priority
    logging.priority  : string = "warning"

    #@description Geometry version requirement (not working with version lower than 2.0)
    geometry.setup_requirement : string = "snemo(>=2)"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='source_strip' module={*} strip=[1;34]"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "surface"

    #@description Surface mode box back face activation
    mode.surface.back  : boolean = 1

    #@description Surface mode box front face activation
    mode.surface.front : boolean = 1
  #+END_SRC

*** External source strips

- Generate vertex from the bulk volume of the source foil:
  #+BEGIN_SRC sh
    [name="source_strips_external_bulk" type="genvtx::box_model_vg"]

    #@config Vertex generation from the bulk volume of the outer source strips

    #@description Logging priority
    logging.priority  : string = "warning"

    #@description Geometry version requirement (not working with version lower than 2.0)
    geometry.setup_requirement : string = "snemo(>=2)"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='source_strip' module={*} strip={0;35}"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "bulk"
  #+END_SRC

- Generate vertex from the surface of the source foil:
  #+BEGIN_SRC sh
    [name="source_strips_external_surface" type="genvtx::box_model_vg"]

    #@config Vertex generation from the surface of the outer source strips

    #@description Logging priority
    logging.priority  : string = "warning"

    #@description Geometry version requirement (not working with version lower than 2.0)
    geometry.setup_requirement : string = "snemo(>=2)"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='source_strip' module={*} strip={0;35}"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "surface"

    #@description Surface mode box back face activation
    mode.surface.back  : boolean = 1

    #@description Surface mode box front face activation
    mode.surface.front : boolean = 1
  #+END_SRC

*** Combined vertex

- Generate vertex from both the bulk volume of all the source foils:
  #+BEGIN_SRC sh
    [name="source_strips_bulk" type="genvtx::combined_vg"]

    #@config Vertex generation from the bulk volume of the source strips

    #@description Logging priority
    logging.priority  : string = "warning"

    #@description Geometry version requirement (not working with version lower than 2.0)
    geometry.setup_requirement : string = "snemo(>=2)"

    #@description Vertex generator names
    generators : string[2]  = "source_strips_external_bulk" "source_strips_internal_bulk"

    #@description Absolute weight of different generators
    generators.source_strips_external_bulk.absolute_weight : real  = 0.054
    generators.source_strips_internal_bulk.absolute_weight : real  = 1.0
  #+END_SRC

- Generate vertex from the surface of all the source foils:
  #+BEGIN_SRC sh
    [name="source_strips_surface" type="genvtx::combined_vg"]

    #@config Vertex generation from the surface of the source strips

    #@description Logging priority
    logging.priority  : string = "warning"

    #@description Geometry version requirement (not working with version lower than 2.0)
    geometry.setup_requirement : string = "snemo(>=2)"

    #@description Vertex generator names
    generators : string[2] = \
      "source_strips_internal_surface" \
      "source_strips_external_surface"

    #@description Absolute weight of different generators
    generators.source_strips_external_surface.absolute_weight : real  = 0.054
    generators.source_strips_internal_surface.absolute_weight : real  = 1.0
  #+END_SRC
** External vertices
:PROPERTIES:
:TANGLE: hall_vg.lis
:END:

Insert preamble
#+BEGIN_SRC sh
  #@description A list of vertex generators
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC

- Generate vertex from the surface of the hall walls
  #+BEGIN_SRC sh
    [name="experimental_hall_surface" type="genvtx::box_model_vg"]

    #@config Vertex generation from the surface of the experimental hall

    #@description Logging priority
    logging.priority  : string = "notice"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='hall'"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "surface"

    #@description Surface mode box back face activation
    mode.surface.back   : boolean = 1

    #@description Surface mode box front face activation
    mode.surface.front  : boolean = 1

    #@description Surface mode box bottom face activation
    mode.surface.bottom : boolean = 1

    #@description Surface mode box top face activation
    mode.surface.top    : boolean = 1

    #@description Surface mode box left face activation
    mode.surface.left   : boolean = 1

    #@description Surface mode box right face activation
    mode.surface.right  : boolean = 1
  #+END_SRC

- Generate vertex from the volume of the hall
  #+BEGIN_SRC sh
    [name="experimental_hall_bulk" type="genvtx::box_model_vg"]

    #@config Vertex generation from the volume of the experimental hall

    #@description Logging priority
    logging.priority  : string = "notice"

    #@description Geometry origin of vertex in term of geometry category and addresses (geom ID)
    origin : string = "category='hall'"

    #@description Generation mode ("surface" or "bulk")
    mode   : string = "bulk"
  #+END_SRC
