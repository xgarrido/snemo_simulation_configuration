#+TITLE:  SNGenbb Manager Configuration
#+AUTHOR: Xavier Garrido
#+DATE:   2013-03-04
#+OPTIONS: toc:nil ^:{}
#+LATEX_CLASS: memoir-article
#+STARTUP: entitiespretty

* Introduction
:PROPERTIES:
:CUSTOM_ID: introduction
:END:

The =genbb= package is dedicated to the generation of double beta decay and/or
radioactive background primary events as input for a simulation program.

More details concerning the use of =genbb= can be found in [[https://nemo.lpc-caen.in2p3.fr/wiki/genbb_help][LPC wiki]].

* Manager configuration
:PROPERTIES:
:CUSTOM_ID: manager_configuration
:TANGLE:    sngenbb_manager.conf
:END:

** Genbb manager configuration
Here, general options such as verbosity, debug flags are passed to =genbb=
manager.
#+BEGIN_SRC sh
  #@config Main configuration parameters for the genbb manager

  #@description Logging priority
  logging.priority : string = "warning"

  #@description List of files containing particle generator definition rules
  generators.configuration_files : string[1] as path = \
      "${SNAILWARE_SIMULATION_DIR}/configuration/current/sngenbb_wrappers.conf"
#+END_SRC

* Genbb wrappers
:PROPERTIES:
:CUSTOM_ID: wrapper_configuration
:TANGLE:    sngenbb_wrappers.conf
:END:

This section holds the configuration of several =genbb= wrappers.

#+BEGIN_SRC sh
  #@description A sample list of setups
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC

** Radioelement wrappers
This part basically provides all the available event generator wrapper for
SuperNEMO.

*** \nbsp^{82}Se \beta\beta0\nu
#+BEGIN_SRC sh
  [name="bb0nu_Se82" type="genbb::wdecay0"]
  #@config Neutrinoless double beta decay of Se-82 [DBD]
  decay_type      : string  = "DBD"
  decay_isotope   : string  = "Se82"
  decay_dbd_level : integer = 0
  decay_dbd_mode  : integer = 1
#+END_SRC

*** \nbsp^{82}Se \beta\beta2\nu
#+BEGIN_SRC sh
  [name="bb2nu_Se82" type="genbb::wdecay0"]
  #@config Two neutrino double beta decay of Se-82 [DBD]
  decay_type      : string  = "DBD"
  decay_isotope   : string  = "Se82"
  decay_dbd_level : integer = 0
  decay_dbd_mode  : integer = 4
  energy_min      : real as energy = 2.0 MeV
  #energy_max      : real as energy = 5.0 MeV
#+END_SRC

*** \nbsp^{48}Ca \beta\beta0\nu
#+BEGIN_SRC sh
  [name="bb0nu_Ca48" type="genbb::wdecay0"]
  #@config Neutrinoless double beta decay of Ca-48 [DBD]
  decay_type      : string  = "DBD"
  decay_isotope   : string  = "Ca48"
  decay_dbd_level : integer = 0
  decay_dbd_mode  : integer = 1
#+END_SRC

*** \nbsp^{48}Ca \beta\beta2\nu
#+BEGIN_SRC sh
  [name="bb2nu_Ca48" type="genbb::wdecay0"]
  #@config Two neutrino double beta decay of Ca-48 [DBD]
  decay_type      : string  = "DBD"
  decay_isotope   : string  = "Ca48"
  decay_dbd_level : integer = 0
  decay_dbd_mode  : integer = 4
  energy_min      : real as energy = 3.2 MeV
  #energy_max      : real as energy = 5.0 MeV
#+END_SRC

*** \nbsp^{150}Nd \beta\beta0\nu
#+BEGIN_SRC sh
  [name="bb0nu_Nd150" type="genbb::wdecay0"]
  #@config Neutrinoless double beta decay of Nd-150 [DBD]
  decay_type      : string  = "DBD"
  decay_isotope   : string  = "Nd150"
  decay_dbd_level : integer = 0
  decay_dbd_mode  : integer = 1
#+END_SRC

*** \nbsp^{150}Nd \beta\beta2\nu
#+BEGIN_SRC sh
  [name="bb2nu_Nd150" type="genbb::wdecay0"]
  #@config Two neutrino double beta decay of Nd-150 [DBD]
  decay_type      : string  = "DBD"
  decay_isotope   : string  = "Nd150"
  decay_dbd_level : integer = 0
  decay_dbd_mode  : integer = 4
  energy_min      : real as energy = 2.3 MeV
  #energy_max      : real as energy = 5.0 MeV
#+END_SRC

*** \nbsp^{208}Tl background
#+BEGIN_SRC sh
  [name="bkg_Tl208" type="genbb::wdecay0"]
  #@config Tl-208 decay [background]
  decay_type      : string  = "background"
  decay_isotope   : string  = "Tl208"
  #energy_min      : real as energy = 0.0 MeV
  #energy_max      : real as energy = 5.0 MeV
#+END_SRC

*** \nbsp^{214}Bi \to\nbsp^{214}Po decay
#+BEGIN_SRC sh
  [name="bkg_Bi214_Po214" type="genbb::wdecay0"]
  #@config Bi-214/Po-214 decay [background]
  decay_type      : string  = "background"
  decay_isotope   : string  = "Bi214+Po214"
  #energy_min      : real as energy = 0.0 MeV
  #energy_max      : real as energy = 5.0 MeV
#+END_SRC

*** \nbsp^{212}Bi \to\nbsp^{212}Po decay
#+BEGIN_SRC sh
  [name="bkg_Bi212_Po212" type="genbb::wdecay0"]
  #@config Bi-212/Po-212 decay [background]
  decay_type      : string  = "background"
  decay_isotope   : string  = "Bi212+Po212"
  #energy_min      : real as energy = 0.0 MeV
  #energy_max      : real as energy = 5.0 MeV
#+END_SRC

*** \nbsp^{207}Bi calibration source
#+BEGIN_SRC sh
  [name="calib_Bi207" type="genbb::wdecay0"]
  #@config Bi-207 decay [calibration]
  decay_type      : string  = "background"
  decay_isotope   : string  = "Bi207+Pb207m"
  #energy_min      : real as energy = 0.0 MeV
  #energy_max      : real as energy = 5.0 MeV
#+END_SRC

** Single particle generator
Here, single particle can be generated using different energy distribution : fix
energy, flat energy distribution given energy limits, gaussian energy
distribution or following a tabulated energy spectrum.

*** Single electron with flat energy distribution
#+BEGIN_SRC sh
  [name="electron_0-3MeV_flat" type="single_particle"]

  #@config Parameters for the "single_particle" mode (class genbb::single_particle_generator):

  #@description Seed for the embedded random number generator:
  seed                  : integer = 314159

  #@description Generated particle ("electron", "positron", "gamma", "alpha"):
  particle_name         : string = "electron"

  #@description Mode ("energy_range", "gaussian_energy", "monokinetic", "spectrum"):
  mode                  : string = "energy_range"

  ### Only for "energy_range" mode:
  min_energy            : real   = 0000.
  max_energy            : real   = 3000.
  energy_unit           : string = "keV"

  ### Only for "gaussian_energy" mode:
  #mean_energy           : real   = 1000.
  #sigma_energy          : real   =  100.
  #energy_unit           : string = "keV"

  ### Only for "monokinetic" mode:
  #energy                : real   = 5500.
  #energy_unit           : string = "keV"

  ### Only for "spectrum" mode:
  #spectrum.data_file    : string = "${SNGENBB_DATA_DIR}/testing/data/sample_tabulated_energy_spectrum.data"

  randomized_direction   : boolean = 1
#+END_SRC


** TODO Combined generators
Combination of several =genbb= generators can be done using
=genbb::combined_particle_generator= object...
